{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/util/logger.ts"],"names":[],"mappings":";;;;;AAAA,sDAA6B;AAE7B,MAAM,OAAO,GAA0B;IACrC,UAAU,EAAE;QACV,IAAI,iBAAO,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;SACjE,CAAC;QACF,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;KACvE;CACF,CAAA;AAED,MAAM,MAAM,GAAG,iBAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;AAE5C,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAM,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;CACnD;AAED,kBAAe,MAAM,CAAA","sourcesContent":["import winston from 'winston'\n\nconst options: winston.LoggerOptions = {\n  transports: [\n    new winston.transports.Console({\n      level: process.env.NODE_ENV === 'production' ? 'error' : 'debug',\n    }),\n    new winston.transports.File({ filename: 'debug.log', level: 'debug' }),\n  ],\n}\n\nconst logger = winston.createLogger(options)\n\nif (process.env.NODE_ENV !== 'production') {\n  logger.debug('Logging initialized at debug level')\n}\n\nexport default logger\n"]}