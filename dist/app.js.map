{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;;;;AAAA,sDAA6B;AAC7B,kDAAyB;AACzB,oDAA2B;AAC3B,8DAAqC;AACrC,gDAAuB;AAEvB,4DAAyC;AACzC,0DAAuC;AACvC,8DAA2C;AAC3C,kEAA+C;AAC/C,8DAA2C;AAC3C,8EAAiD;AACjD,gEAA0C;AAE1C,oFAA2D;AAC3D,kFAAyD;AACzD,0DAAuC;AAEvC,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;AAC/B,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAA;AAErB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAA;AAEf,yBAAyB;AACzB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAA;AAEvB,0CAA0C;AAC1C,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;AAE/C,wBAAwB;AACxB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAA;AACzC,GAAG,CAAC,GAAG,CAAC,wBAAc,CAAC,CAAA;AAEvB,8BAA8B;AAC9B,GAAG,CAAC,GAAG,CAAC,IAAA,qBAAW,GAAE,CAAC,CAAA;AACtB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAA;AACvB,GAAG,CAAC,GAAG,CAAC,eAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAA;AACnC,GAAG,CAAC,GAAG,CAAC,eAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAA;AAElC,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAW,CAAC,CAAA;AACvC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,kBAAc,CAAC,CAAA;AACzC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,kBAAc,CAAC,CAAA;AACzC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,gBAAY,CAAC,CAAA;AACrC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,cAAU,CAAC,CAAA;AACjC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,wBAAU,CAAC,CAAA;AACjC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,gBAAY,CAAC,CAAA;AACrC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,iBAAU,CAAC,CAAA;AAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,cAAU,CAAC,CAAA;AAExB,GAAG,CAAC,GAAG,CAAC,yBAAe,CAAC,CAAA;AAExB,kBAAe,GAAG,CAAA","sourcesContent":["import express from 'express'\nimport lusca from 'lusca'\nimport dotenv from 'dotenv'\nimport compression from 'compression'\nimport cors from 'cors'\n\nimport emailRouter from './routers/email'\nimport bookRouter from './routers/book'\nimport authorRouter from './routers/author'\nimport customerRouter from './routers/customer'\nimport borrowRouter from './routers/borrow'\nimport authRouter from './routers/authentication'\nimport baseRouter from './routers/baseUrl'\n\nimport apiErrorHandler from './middlewares/apiErrorHandler'\nimport apiContentType from './middlewares/apiContentType'\nimport homeRouter from './routers/home'\n\ndotenv.config({ path: '.env' })\nconst app = express()\n\napp.use(cors())\n\n// parse application/json\napp.use(express.json())\n\n// parse application/x-www-form-urlencoded\napp.use(express.urlencoded({ extended: true }))\n\n// Express configuration\napp.set('port', process.env.PORT || 3000)\napp.use(apiContentType)\n\n//common 3rd-party middlewares\napp.use(compression())\napp.use(express.json())\napp.use(lusca.xframe('SAMEORIGIN'))\napp.use(lusca.xssProtection(true))\n\napp.use('/api/send-email', emailRouter)\napp.use('/api/customers', customerRouter)\napp.use('/api/customers', customerRouter)\napp.use('/api/borrows', borrowRouter)\napp.use('/api/books', bookRouter)\napp.use('/api/auths', authRouter)\napp.use('/api/authors', authorRouter)\napp.use('/api', baseRouter)\napp.use('/', homeRouter)\n\napp.use(apiErrorHandler)\n\nexport default app\n"]}