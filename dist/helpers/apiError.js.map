{"version":3,"file":"apiError.js","sourceRoot":"","sources":["../../src/helpers/apiError.ts"],"names":[],"mappings":";;;AAAA,MAAqB,QAAS,SAAQ,KAAK;IACzC,YACW,UAAkB,EAClB,OAAe,EACf,MAAc;QAEvB,KAAK,EAAE,CAAA;QAJE,eAAU,GAAV,UAAU,CAAQ;QAClB,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;IAGzB,CAAC;CACF;AARD,2BAQC;AAED,MAAa,aAAc,SAAQ,QAAQ;IACzC,YAAqB,UAAkB,WAAW,EAAE,MAAoB;QACtE,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;QADR,YAAO,GAAP,OAAO,CAAsB;IAElD,CAAC;CACF;AAJD,sCAIC;AAED,MAAa,cAAe,SAAQ,QAAQ;IAC1C,YAAqB,UAAkB,WAAW,EAAE,MAAoB;QACtE,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;QADR,YAAO,GAAP,OAAO,CAAsB;IAElD,CAAC;CACF;AAJD,wCAIC;AAED,MAAa,mBAAoB,SAAQ,QAAQ;IAC/C,YACW,UAAkB,uBAAuB,EAClD,MAAoB;QAEpB,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;QAHlB,YAAO,GAAP,OAAO,CAAkC;IAIpD,CAAC;CACF;AAPD,kDAOC;AAED,MAAa,iBAAkB,SAAQ,QAAQ;IAC7C,YACW,UAAkB,sBAAsB,EACjD,MAAoB;QAEpB,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;QAHlB,YAAO,GAAP,OAAO,CAAiC;IAInD,CAAC;CACF;AAPD,8CAOC;AAED,MAAa,eAAgB,SAAQ,QAAQ;IAC3C,YAAqB,UAAkB,aAAa,EAAE,MAAoB;QACxE,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;QADR,YAAO,GAAP,OAAO,CAAwB;IAEpD,CAAC;CACF;AAJD,0CAIC","sourcesContent":["export default class ApiError extends Error {\n  constructor(\n    readonly statusCode: number,\n    readonly message: string,\n    readonly source?: Error\n  ) {\n    super()\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(readonly message: string = 'Not Found', source?: Error | any) {\n    super(404, message, source)\n  }\n}\n\nexport class ForbiddenError extends ApiError {\n  constructor(readonly message: string = 'Forbidden', source?: Error | any) {\n    super(403, message, source)\n  }\n}\n\nexport class InternalServerError extends ApiError {\n  constructor(\n    readonly message: string = 'Internal Server Error',\n    source?: Error | any\n  ) {\n    super(500, message, source)\n  }\n}\n\nexport class UnauthorizedError extends ApiError {\n  constructor(\n    readonly message: string = 'Unauthorized Request',\n    source?: Error | any\n  ) {\n    super(401, message, source)\n  }\n}\n\nexport class BadRequestError extends ApiError {\n  constructor(readonly message: string = 'Bad Request', source?: Error | any) {\n    super(400, message, source)\n  }\n}\n"]}