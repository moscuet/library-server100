{"version":3,"file":"borrow.js","sourceRoot":"","sources":["../../src/controllers/borrow.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express'\n\nimport Borrow from '../models/Borrow'\nimport BorrowService from '../services/borrow'\nimport { BadRequestError } from '../helpers/apiError'\n\n// POST /borrows\nexport const createBorrow = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const { bookId, customerId, borrowDate, returnDate } = req.body\n\n    const borrow = new Borrow({\n      customerId,\n      bookId,\n      borrowDate,\n      returnDate,\n      isReturned: false,\n    })\n\n    await BorrowService.create(borrow)\n    res.json(borrow)\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// PUT /borrws/:borrowId\nexport const updateBorrow = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const update = req.body\n    const borrowId = req.params.borrowId\n    const updatedBorrow = await BorrowService.update(borrowId, update)\n    res.json(updatedBorrow)\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// DELETE /borrows/:borrowId\nexport const deleteBorrow = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await BorrowService.deleteBorrow(req.params.borrowId)\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// GET /borrows/:borrowId\nexport const findById = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    res.json(await BorrowService.findById(req.params.borrowId))\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// GET /borrows\nexport const findAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const params: string = req.query.customerId as string\n  if (!params) {\n    try {\n      res.json(await BorrowService.findAll())\n    } catch (error) {\n      if (error instanceof Error && error.name == 'ValidationError') {\n        next(new BadRequestError('Invalid Request', error))\n      } else {\n        next(error)\n      }\n    }\n  } else {\n    try {\n      res.json(await BorrowService.findByCustomerId(params))\n    } catch (error) {\n      if (error instanceof Error && error.name == 'ValidationError') {\n        next(new BadRequestError('Invalid Request', error))\n      } else {\n        next(error)\n      }\n    }\n  }\n}\n\n// Delete All Borrow\n\nexport const deleteAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await BorrowService.deleteAll()\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n"]}