{"version":3,"file":"author.js","sourceRoot":"","sources":["../../src/controllers/author.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express'\nimport Author from '../models/Author'\nimport AuthorService from '../services/author'\nimport { BadRequestError, NotFoundError } from '../helpers/apiError'\n\n// POST /Authors\nexport const createAuthor = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const { firstName, lastName, biography } = req.body\n\n    const author = new Author({\n      firstName,\n      lastName,\n      biography,\n    })\n    await AuthorService.create(author)\n    res.json(author)\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      console.log('#########!!!!!!')\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n      console.log('#########\"\"22222222222')\n    }\n  }\n}\n\n// PUT /Authors/:AuthorId\nexport const updateAuthor = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const update = req.body\n    const authorId = req.params.authorId\n    const updatedAuthor = await AuthorService.update(authorId, update)\n    res.json(updatedAuthor)\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// DELETE /Authors/:AuthorId\nexport const deleteAuthor = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await AuthorService.deleteAuthor(req.params.authorId)\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof BadRequestError || error instanceof NotFoundError) {\n      res.status(error.statusCode).send({ message: error.message }) \n    } else {\n      next(error)\n    }\n  }\n}\n\n// GET /Authors/:AuthorId\nexport const findById = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    res.json(await AuthorService.findById(req.params.authorId))\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// GET /Authors\nexport const findAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    res.json(await AuthorService.findAll())\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\nexport const deleteAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await AuthorService.deleteAll()\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n"]}