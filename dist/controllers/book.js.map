{"version":3,"file":"book.js","sourceRoot":"","sources":["../../src/controllers/book.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express'\n\nimport Book from '../models/Book'\nimport BookService from '../services/book'\nimport { BadRequestError } from '../helpers/apiError'\n\n// POST /books\n\nexport const findByQuery = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const q1 = req.query.catagory\n  try {\n    res.json(await BookService.findByQuery())\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\nexport const createBook = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const {\n      ISBN,\n      title,\n      publisherName,\n      author,\n      publishedYear,\n      genres,\n      description,\n      edition,\n      pageCount,\n      img,\n    } = req.body\n\n    const book = new Book({\n      ISBN,\n      title,\n      publisherName,\n      authors: author ? author.split(',') : '',\n      publishedYear,\n      genres: genres ? genres.split(',') : '',\n      description,\n      edition,\n      pageCount,\n      img,\n    })\n    await BookService.create(book)\n    res.json(book)\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// PUT /books/:bookId\nexport const updateBook = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const update = req.body\n    const bookId = req.params.bookId\n    const updatedBook = await BookService.update(bookId, update)\n    res.json(updatedBook)\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// DELETE /books/:bookId\nexport const deleteBook = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await BookService.deleteBook(req.params.bookId)\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// GET /books/:bookId\nexport const findByIdAndPopulate = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    res.json(await BookService.findByIdAndPopulate(req.params.bookId))\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// GET /books\nexport const findAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    res.json(await BookService.findAll())\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n//\n\nexport const findAllAndPopulate = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    res.json(await BookService.findAllAndPopulate())\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// Delete All Book\n\nexport const deleteAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await BookService.deleteAll()\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n"]}