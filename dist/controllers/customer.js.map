{"version":3,"file":"customer.js","sourceRoot":"","sources":["../../src/controllers/customer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport Customer from '../models/Customer'\nimport CustomerService from '../services/customer'\nimport { BadRequestError } from '../helpers/apiError'\n\n// PUT /Customers/:customerId\nexport const updateCustomer = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const update = {\n      firstName: req.body.firstName,\n      lastName: req.body.lastName,\n      useremail: req.body.useremail,\n      phoneNumber: req.body.phoneNumber,\n      address: req.body.address,\n    }\n    const customerId = req.params.customerId\n    console.log(\n      'from controller/customers/updatecustomer rep.body && id:',\n      update,\n      customerId\n    )\n\n    const updatedCustomer = await CustomerService.update(customerId, update)\n    res.json(updatedCustomer)\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// DELETE /Customers/:customerId\nexport const deleteCustomer = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await CustomerService.deleteCustomer(req.params.customerId)\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n// GET /Customers/:customerId\n// GET /Authors/:AuthorId\nexport const findById = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    res.json(await CustomerService.findById(req.params.customerId))\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n//GET /Customers\nexport const findAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  console.log('hello')\n  try {\n    res.json(await CustomerService.findAll())\n  } catch (error) {\n    console.log('error')\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n\n//Delete All Customer\n\nexport const deleteAll = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    await CustomerService.deleteAll()\n    res.status(204).end()\n  } catch (error) {\n    if (error instanceof Error && error.name == 'ValidationError') {\n      next(new BadRequestError('Invalid Request', error))\n    } else {\n      next(error)\n    }\n  }\n}\n"]}