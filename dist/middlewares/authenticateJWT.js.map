{"version":3,"file":"authenticateJWT.js","sourceRoot":"","sources":["../../src/middlewares/authenticateJWT.ts"],"names":[],"mappings":";;;;;AACA,gEAA8B;AAC9B,0DAAuC;AACvC,MAAM,qBAAqB,GAAG,CAC5B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAA;IAE5C,IAAI,UAAU,EAAE;QACd,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACtC,MAAM,iBAAiB,GAAG,cAAU,CAAC,MAAM,CAAA;QAC3C,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,iBAAiB,EAAE,CAAC,GAAQ,EAAE,IAAS,EAAE,EAAE;YAC3D,IAAI,GAAG,EAAE;gBACP,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACnB,MAAM,EAAE,qBAAqB;oBAC7B,UAAU,EAAE,GAAG;oBACf,OAAO,EAAE,8BAA8B;iBACxC,CAAC,CAAA;aACH;YAED,GAAG,CAAC,IAAI,GAAG,IAAI,CAAA;YACf,IAAI,EAAE,CAAA;QACR,CAAC,CAAC,CAAA;KACH;SAAM;QACL,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,MAAM,EAAE,qBAAqB;YAC7B,UAAU,EAAE,GAAG;YACf,OAAO,EAAE,mBAAmB;SAC7B,CAAC,CAAA;KACH;AACH,CAAC,CAAA;AACD,kBAAe,qBAAqB,CAAA","sourcesContent":["import { Request, Response, NextFunction } from 'express'\nimport jwt from 'jsonwebtoken'\nimport authConfig from '../config/auth'\nconst JwtTokenAtuthenticate = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const authHeader = req.headers.authorization\n\n  if (authHeader) {\n    const token = authHeader.split(' ')[1]\n    const accessTokenSecret = authConfig.secret\n    jwt.verify(token, accessTokenSecret, (err: any, user: any) => {\n      if (err) {\n        res.status(403).json({\n          status: 'failed authenticate',\n          statusCode: 403,\n          message: 'Failed to authenticate user.',\n        })\n      }\n\n      req.user = user\n      next()\n    })\n  } else {\n    res.status(401).json({\n      status: 'failed authenticate',\n      statusCode: 403,\n      message: 'No token provided',\n    })\n  }\n}\nexport default JwtTokenAtuthenticate\n"]}