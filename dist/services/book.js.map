{"version":3,"file":"book.js","sourceRoot":"","sources":["../../src/services/book.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0DAAmD;AACnD,kDAAoE;AACpE,8DAAqC;AAErC,MAAM,MAAM,GAAG,CAAO,IAAkB,EAAyB,EAAE;IACjE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAA;AACpB,CAAC,CAAA,CAAA;AAED,MAAM,mBAAmB,GAAG,CAAO,MAAc,EAAyB,EAAE;IAC1E,MAAM,SAAS,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;IAEjE,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,IAAI,wBAAa,CAAC,QAAQ,MAAM,YAAY,CAAC,CAAA;KACpD;IAED,OAAO,SAAS,CAAA;AAClB,CAAC,CAAA,CAAA;AAED,MAAM,OAAO,GAAG,GAAkC,EAAE;IAClD,OAAO,cAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA;AAC1D,CAAC,CAAA,CAAA;AAED,MAAM,WAAW,GAAG,GAAkC,EAAE;IACtD,OAAO,cAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA;AAC1D,CAAC,CAAA,CAAA;AAED,MAAM,kBAAkB,GAAG,GAAkC,EAAE;IAC7D,OAAO,cAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;AAC7E,CAAC,CAAA,CAAA;AAED,MAAM,SAAS,GAAG,GAAwB,EAAE;IAC1C,MAAM,cAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA;AAC3B,CAAC,CAAA,CAAA;AAED,MAAM,MAAM,GAAG,CACb,MAAc,EACd,MAA6B,EACC,EAAE;IAChC,MAAM,SAAS,GAAG,MAAM,cAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE;QAC7D,GAAG,EAAE,IAAI;KACV,CAAC,CAAA;IAEF,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,IAAI,wBAAa,CAAC,QAAQ,MAAM,YAAY,CAAC,CAAA;KACpD;IAED,OAAO,SAAS,CAAA;AAClB,CAAC,CAAA,CAAA;AAED,MAAM,UAAU,GAAG,CAAO,MAAc,EAAgC,EAAE;IACxE,MAAM,WAAW,GAAG,MAAM,gBAAM,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,CAAC,CAAA;IAE3D,IAAI,WAAW,GAAG,CAAC,EAAE;QACnB,MAAM,IAAI,0BAAe,CAAC,sBAAsB,MAAM,kCAAkC,CAAC,CAAA;KAC1F;IAED,MAAM,SAAS,GAAG,MAAM,cAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAA;IACtD,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,IAAI,wBAAa,CAAC,QAAQ,MAAM,YAAY,CAAC,CAAA;KACpD;IACD,OAAO,SAAS,CAAA;AAClB,CAAC,CAAA,CAAA;AAGD,kBAAe;IACb,MAAM;IACN,mBAAmB;IACnB,OAAO;IACP,WAAW;IACX,SAAS;IACT,MAAM;IACN,UAAU;IACV,kBAAkB;CACnB,CAAA","sourcesContent":["import Book, { BookDocument } from '../models/Book'\nimport { BadRequestError, NotFoundError } from '../helpers/apiError'\nimport Borrow from '../models/Borrow'\n\nconst create = async (book: BookDocument): Promise<BookDocument> => {\n  return book.save()\n}\n\nconst findByIdAndPopulate = async (bookId: string): Promise<BookDocument> => {\n  const foundBook = await Book.findById(bookId).populate('authors')\n\n  if (!foundBook) {\n    throw new NotFoundError(`Book ${bookId} not found`)\n  }\n\n  return foundBook\n}\n\nconst findAll = async (): Promise<BookDocument[]> => {\n  return Book.find().sort({ title: 1, publishedYear: -1 })\n}\n\nconst findByQuery = async (): Promise<BookDocument[]> => {\n  return Book.find().sort({ title: 1, publishedYear: -1 })\n}\n\nconst findAllAndPopulate = async (): Promise<BookDocument[]> => {\n  return Book.find().sort({ name: 1, publishedYear: -1 }).populate('authors')\n}\n\nconst deleteAll = async (): Promise<void> => {\n  await Book.deleteMany({})\n}\n\nconst update = async (\n  bookId: string,\n  update: Partial<BookDocument>\n): Promise<BookDocument | null> => {\n  const foundBook = await Book.findByIdAndUpdate(bookId, update, {\n    new: true,\n  })\n\n  if (!foundBook) {\n    throw new NotFoundError(`Book ${bookId} not found`)\n  }\n\n  return foundBook\n}\n\nconst deleteBook = async (bookId: string): Promise<BookDocument | null> => {\n  const borrowCount = await Borrow.countDocuments({ bookId })\n\n  if (borrowCount > 0) {\n    throw new BadRequestError(`Cannot delete book ${bookId} as it is borrowed by customers.`)\n  }\n\n  const foundBook = await Book.findByIdAndDelete(bookId)\n  if (!foundBook) {\n    throw new NotFoundError(`Book ${bookId} not found`)\n  }\n  return foundBook\n}\n\n\nexport default {\n  create,\n  findByIdAndPopulate,\n  findAll,\n  findByQuery,\n  deleteAll,\n  update,\n  deleteBook,\n  findAllAndPopulate,\n}\n"]}