{"version":3,"file":"book.js","sourceRoot":"","sources":["../../src/routers/book.ts"],"names":[],"mappings":";;;;;AAAA,sDAA6B;AAE7B,8CAS4B;AAE5B,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAA;AAE/B,uDAAuD;AAEvD,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,kBAAW,CAAC,CAAA;AAEpC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,yBAAkB,CAAC,CAAA;AAEtC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,cAAO,CAAC,CAAA;AAExB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,0BAAmB,CAAC,CAAA;AAE3C,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAU,CAAC,CAAA;AAElC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,iBAAU,CAAC,CAAA;AAErC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,iBAAU,CAAC,CAAA;AAE5B,kBAAe,MAAM,CAAA","sourcesContent":["import express from 'express'\n\nimport {\n  createBook,\n  findByIdAndPopulate,\n  deleteBook,\n  findAll,\n  findByQuery,\n  findAllAndPopulate,\n  updateBook,\n  deleteAll,\n} from '../controllers/book'\n\nconst router = express.Router()\n\n// Every path we define here will get /api/books prefix\n\nrouter.get('/catagory', findByQuery)\n\nrouter.get('/all', findAllAndPopulate)\n\nrouter.get('/', findAll)\n\nrouter.get('/:bookId', findByIdAndPopulate)\n\nrouter.put('/:bookId', updateBook)\n\nrouter.delete('/:bookId', deleteBook)\n\nrouter.post('/', createBook)\n\nexport default router\n"]}