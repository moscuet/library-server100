{"version":3,"file":"Borrow.js","sourceRoot":"","sources":["../../src/models/Borrow.ts"],"names":[],"mappings":";;;;;AAAA,wDAA6C;AAU7C,MAAM,YAAY,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IACvC,MAAM,EAAE;QACN;YACE,IAAI,EAAE,kBAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,GAAG,EAAE,MAAM;YACX,QAAQ,EAAE,IAAI;SACf;KACF;IACD,UAAU,EAAE;QACV;YACE,IAAI,EAAE,MAAM;YACZ,GAAG,EAAE,UAAU;YACf,QAAQ,EAAE,IAAI;SACf;KACF;IACD,UAAU,EAAE;QACV,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KAClB;IACD,UAAU,EAAE;QACV,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;KAC/D;IACD,UAAU,EAAE;QACV,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;CACF,CAAC,CAAA;AAEF,kBAAe,kBAAQ,CAAC,KAAK,CAAiB,QAAQ,EAAE,YAAY,CAAC,CAAA","sourcesContent":["import mongoose, { Document } from 'mongoose'\n\nexport type BorrowDocument = Document & {\n  bookId: string[]\n  customerId: string[]\n  borrowDate: Date\n  returnDate: Date\n  isReturned: boolean\n  _id?: string\n}\nconst borrowSchema = new mongoose.Schema({\n  bookId: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Book',\n      required: true,\n    },\n  ],\n  customerId: [\n    {\n      type: String,\n      ref: 'Customer',\n      required: true,\n    },\n  ],\n  borrowDate: {\n    type: Date,\n    default: Date.now,\n  },\n  returnDate: {\n    type: Date,\n    default: new Date(new Date().getTime() + 7 * 24 * 3600 * 1000),\n  },\n  isReturned: {\n    type: Boolean,\n    default: false,\n  },\n})\n\nexport default mongoose.model<BorrowDocument>('Borrow', borrowSchema)\n"]}